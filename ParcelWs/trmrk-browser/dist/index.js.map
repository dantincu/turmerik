{"mappings":";;;;;;;;;;AE+BO,MAAM;IACX,YAAY,AAAgB,MAAsB,CAAE;aAAxB,SAAA;IAAyB;IAE9C,KAAK,IAA8B,EAAE;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,KAAK,oBAAoB;IACvD;IAEA,MAAa,IAAO,IAA4B,EAAE;QAChD,IAAI,OAAQ,MAAM,KAAK,cAAc;QAErC,IAAI,CAAC,KAAK,UAAU,EAAE;YACpB,OAAQ,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC,MAAM;YAEtC,IAAI,KAAK,eAAe,EAAE;gBACxB,MAAM,UAAU,MAAM,KAAK,cAAc,CAAC,KAAK,IAAI;gBACnD,KAAK,UAAU,GAAG,QAAQ,UAAU;YACtC;QACF,OACE,KAAK,eAAe,GAAG;QAGzB,OAAO;IACT;AACF;;;ADpDO,MAAM,4CAAmB;IAC9B,GAAG,yBAAI;AACT;;;ADFO,MAAM,4CAAU;sBACrB;AACF","sources":["src/index.ts","src/axiosLocalForage/index.ts","src/axiosLocalForage/core.ts"],"sourcesContent":["import * as axiosLocalForage from \"./axiosLocalForage\";\r\n\r\nexport const browser = {\r\n  axiosLocalForage,\r\n};\r\n","import * as core from \"./core\";\r\n\r\nexport const axiosLocalForage = {\r\n  ...core,\r\n};\r\n\r\nexport type AxiosLocalForage = core.AxiosLocalForage;\r\nexport type AxiosLocalForageType = core.AxiosLocalForageType;\r\nexport type AxiosLocalForageInitOpts = core.AxiosLocalForageInitOpts;\r\nexport type AxiosLocalForageReq<T> = core.AxiosLocalForageReq<T>;\r\nexport type AxiosLocalForageResp<T> = core.AxiosLocalForageResp<T>;\r\n","import { AxiosRequestConfig } from \"axios\";\r\nimport * as localforage from \"localforage\";\r\nimport { core as trmrk } from \"trmrk\";\r\n\r\nimport {\r\n  ApiConfigData,\r\n  ApiResponse,\r\n  AxiosResponse,\r\n  ApiServiceType,\r\n} from \"trmrk-axios/src/core\";\r\n\r\nimport { TrmrkDBResp } from \"trmrk-browser-core/src/indexedDB/core\";\r\n\r\nexport interface AxiosLocalForageInitOpts {\r\n  data: ApiConfigData;\r\n  defaultConfigFactory?:\r\n    | ((data: any) => AxiosRequestConfig<any> | undefined)\r\n    | null\r\n    | undefined;\r\n}\r\n\r\nexport interface AxiosLocalForageReq<T> {\r\n  localForageGet: () => Promise<TrmrkDBResp<T>>;\r\n  apiCall: (apiSvc: ApiServiceType) => Promise<ApiResponse<T>>;\r\n  localForageSet: (data: T) => Promise<TrmrkDBResp<T>>;\r\n}\r\n\r\nexport interface AxiosLocalForageResp<T>\r\n  extends ApiResponse<T>,\r\n    TrmrkDBResp<T> {}\r\n\r\nexport class AxiosLocalForage {\r\n  constructor(public readonly apiSvc: ApiServiceType) {}\r\n\r\n  public init(opts: AxiosLocalForageInitOpts) {\r\n    this.apiSvc.init(opts.data, opts.defaultConfigFactory);\r\n  }\r\n\r\n  public async req<T>(opts: AxiosLocalForageReq<T>) {\r\n    let resp = (await opts.localForageGet()) as AxiosLocalForageResp<T>;\r\n\r\n    if (!resp.cacheMatch) {\r\n      resp = (await opts.apiCall(this.apiSvc)) as AxiosLocalForageResp<T>;\r\n\r\n      if (resp.isSuccessStatus) {\r\n        const setResp = await opts.localForageSet(resp.data);\r\n        resp.cacheError = setResp.cacheError;\r\n      }\r\n    } else {\r\n      resp.isSuccessStatus = true;\r\n    }\r\n\r\n    return resp;\r\n  }\r\n}\r\n\r\nexport type AxiosLocalForageType = AxiosLocalForage;\r\n"],"names":[],"version":3,"file":"index.js.map"}